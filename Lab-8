V = set of variables
T = set of terms
P = set of predicates
S = set of substitutions
def unify(x, y, theta):
    if theta == None:
        return None
    elif x == y:
        return theta
    elif is_variable(x):
        return unify_var(x, y, theta)
    elif is_variable(y):
        return unify_var(y, x, theta)
    elif is_compound(x) and is_compound(y):
        return unify(x.args, y.args, unify(x.func, y.func, theta))
    else:
        return None
def is_variable(x):
    return x in V
def is_compound(x):
    return isinstance(x, P)
def unify_var(var, x, theta):
    if var in theta:
        return unify(theta[var], x, theta)
    elif x in theta:
        return unify(var, theta[x], theta)
    elif occur_check(var, x, theta):
        return None
    else:
        theta[var] = x
        return theta
def occur_check(var, x, theta):
    if var == x:
        return True
    elif is_variable(x) and x in theta:
        return occur_check(var, theta[x], theta)
    elif is_compound(x):
        return any(occur_check(var, arg, theta) for arg in x.args)
    else:
        return False
        

 

